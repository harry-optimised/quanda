"""
Django settings for quanda project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from os import getenv
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = getenv("SECRET_KEY")
DEBUG = getenv('DEBUG', 0) == '1'
ALLOWED_HOSTS = getenv("DJANGO_ALLOWED_HOSTS").split(" ")
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_HEADERS = ['Quanda-Project', 'Content-Type', 'Authorization']


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'rest_framework',
    "rest_framework_simplejwt",
    'guardian',
    'user',
    'item',
    'api'
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    'corsheaders.middleware.CorsMiddleware',
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.auth.middleware.RemoteUserMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "quanda.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "quanda.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        "ENGINE": getenv("SQL_ENGINE", "django.db.backends.sqlite3"),
        "NAME": getenv("SQL_DATABASE", BASE_DIR / "db.sqlite3"),
        "USER": getenv("SQL_USER", "user"),
        "PASSWORD": getenv("SQL_PASSWORD", "password"),
        "HOST": getenv("SQL_HOST", "localhost"),
        "PORT": getenv("SQL_PORT", "5432"),
    }
}


# Caching
# https://docs.djangoproject.com/en/4.2/topics/cache/

CACHES = {
    'default': {
        'BACKEND': 'quanda.cache.LoggingRedisCache',
        'LOCATION': "redis://redis:6379/1",
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        }
    }
}

# Time-to-live for the cache in seconds (e.g., 1 hour here)
CACHE_TTL = 60 * 60



# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_USER_MODEL = 'user.User'

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]
 

# Permissions
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'guardian.backends.ObjectPermissionBackend',
    #django.contrib.auth.backends.RemoteUserBackend',
)


# Auth
SIMPLE_JWT = {
    'ALGORITHM': 'RS256',
    'AUDIENCE': 'api.quanda.ai',
    'ISSUER': f"https://dev-czejtnrwqf2cuw1e.uk.auth0.com/",
    'USER_INFO_ENDPOINT': f"https://dev-czejtnrwqf2cuw1e.uk.auth0.com/userinfo",
    'JWK_URL': f"https://dev-czejtnrwqf2cuw1e.uk.auth0.com/.well-known/jwks.json",
    "USER_ID_CLAIM": 'sub',
    "USER_ID_FIELD": 'sub',
    'JTI_CLAIM': None,
    'TOKEN_TYPE_CLAIM': None,
}

# REST Framework
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'user.auth.Auth0Authentication',
    ),
}


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# HTTPS Proxy
SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")
CSRF_TRUSTED_ORIGINS = getenv("CSRF_TRUSTED_ORIGINS").split(" ")

# Logging
# https://docs.djangoproject.com/en/4.2/topics/logging/

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{', 
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        }, 
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
        'quanda': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
        'urllib3': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False, 
        },
    }, 
}
